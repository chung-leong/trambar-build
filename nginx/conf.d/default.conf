server {
    listen 80;
    server_name localhost;

    location /data/ {
        proxy_pass http://data_server/data/;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Connection-Protocol $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Keep-Alive,User-Agent,Cache-Control,Content-Type' always;
    }

    location /auth/ {
        proxy_pass http://auth_manager/auth/;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Connection-Protocol $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Keep-Alive,User-Agent,Cache-Control,Content-Type' always;
    }

    location /media/ {
        proxy_pass http://media_server/media/;
        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Connection-Protocol $scheme;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        client_max_body_size 10m;
        add_header 'Access-Control-Allow-Origin' '*' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'Keep-Alive,User-Agent,Cache-Control,Content-Type' always;
    }

    location /socket/ {
        proxy_pass http://websocket_notifier/socket/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-HTTPS-Protocol $ssl_protocol;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    }

    location /gitlab/ {
        proxy_pass http://gitlab_adapter/gitlab/;
    }

    location / {
        root /var/www/trambar/client;
        try_files $uri /index.html;
    }
}

upstream auth_manager {
    server trambar_auth_manager_1:80;
}

upstream data_server {
    server trambar_data_server_1:80;
}

upstream media_server {
    server trambar_media_server_1:80;
}

upstream gitlab_adapter {
    server trambar_gitlab_adapter_1:80;
}

upstream websocket_notifier {
    server trambar_websocket_notifier_1:80;
    ip_hash;
}
